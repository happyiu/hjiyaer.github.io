<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>咦~被你发现咯</title>
  
  <subtitle>嘻嘻</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.hjiya.cn/"/>
  <updated>2020-03-21T05:38:50.241Z</updated>
  <id>http://blog.hjiya.cn/</id>
  
  <author>
    <name>ERYORE</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>面试题思考汇总（Node篇）</title>
    <link href="http://blog.hjiya.cn/2020/03/21/interview1/"/>
    <id>http://blog.hjiya.cn/2020/03/21/interview1/</id>
    <published>2020-03-21T05:23:03.000Z</published>
    <updated>2020-03-21T05:38:50.241Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-node是单线程还是双线程"><a href="#1-node是单线程还是双线程" class="headerlink" title="1. node是单线程还是双线程"></a>1. node是单线程还是双线程</h2><p>Node是单线程的，但Node能开启多进程</p><h2 id="2-那Node怎么开启多线程"><a href="#2-那Node怎么开启多线程" class="headerlink" title="2. 那Node怎么开启多线程"></a>2. 那Node怎么开启多线程</h2><p>可以使用Node里的内置模块 <code>Cluster</code> 开启多进程</p><p>下面来看段代码</p><pre><code class="js">const cluster = require(&#39;cluster&#39;)const os = require(&#39;os&#39;)const numCPUs = os.cpus().lengthconst process = require(&#39;process&#39;)console.log(&#39;numCPUs&#39;,numCPUs)const workers = {}if(cluster.isMaster){  cluster.on(&#39;death&#39;, function(worker){    worker = cluster.fork()    workers[worker.pid] = worker  })  // 主进程  for(let i=0;i&lt;numCPUs;i++){    const worker = cluster.fork()    workers[worker.pid] = worker  }  // 当进程被终止  process.on(&#39;SIGTERM&#39;, function(){    for(let pid in workers){      process.kill(pid)    }    process.exit(0)  })} else {  // 其他进程，工作进程  const app = require(&#39;./app&#39;)  app.use(async (ctx,next) =&gt; {    console.log(&#39;worker&#39; + cluster.worker.id + &#39;,PID: &#39; + process.pid)    next()  })  app.listen(3000,() =&gt; {    console.log(&#39;http://127.0.0.1:3000&#39;)  })}</code></pre><h2 id="3-这里都是监听了统一端口，他们会冲突吗？"><a href="#3-这里都是监听了统一端口，他们会冲突吗？" class="headerlink" title="3. 这里都是监听了统一端口，他们会冲突吗？"></a>3. 这里都是监听了统一端口，他们会冲突吗？</h2><ul><li>并不会冲突，简单的说<ul><li>在服务器同时启动多个进程。</li><li>每个进程都跑的是同一份源码（好比把以前一个进程的工作分给多个进程去做）</li><li>更神奇的是，这些进程可以同时监听一个端口</li></ul></li><li>其中<ul><li>启动其他进程的叫做Master进程，他好比是个包工头，不做具体的工作，只负责启动其他进程</li><li>其他被Master启动的叫做Worker进程，顾名思义就是干活的工人，它们接受请求，对外提供服务</li><li>Woker进程数量一般工具服务器的CPU决定，这样就可以利用多核资源</li></ul></li></ul><h2 id="4-那它们是怎么调度的"><a href="#4-那它们是怎么调度的" class="headerlink" title="4. 那它们是怎么调度的"></a>4. 那它们是怎么调度的</h2><p>未完待续…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-node是单线程还是双线程&quot;&gt;&lt;a href=&quot;#1-node是单线程还是双线程&quot; class=&quot;headerlink&quot; title=&quot;1. node是单线程还是双线程&quot;&gt;&lt;/a&gt;1. node是单线程还是双线程&lt;/h2&gt;&lt;p&gt;Node是单线程的，但Node能
      
    
    </summary>
    
      <category term="技术" scheme="http://blog.hjiya.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Birthday</title>
    <link href="http://blog.hjiya.cn/2020/03/21/birthday/"/>
    <id>http://blog.hjiya.cn/2020/03/21/birthday/</id>
    <published>2020-03-21T02:47:04.000Z</published>
    <updated>2020-03-21T04:19:58.633Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>闲来无事，搭个博客吧，也不知道写些啥，那就记录下我那平淡无奇的生活吧。</p><a href="http://blogpic.hjiya.cn/wallhaven-725842.webp" data-fancybox="images" data-caption="主人没有描述我哦~" target="_blank" rel="noopener"><img src="http://blogpic.hjiya.cn/wallhaven-725842.webp"></a><p><img src alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;闲来无事，搭个博客吧，也不知道写些啥，那就记录下我那平淡无奇的生活吧。&lt;/p&gt;
&lt;a href=&quot;http://blogpic.hjiya.
      
    
    </summary>
    
      <category term="随想" scheme="http://blog.hjiya.cn/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="悦读" scheme="http://blog.hjiya.cn/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
</feed>
